SELECT 
ASSET_NUMBER,
TO_CHAR (INVOICE_DATE,'DD-Mon-YYYY','NLS_DATE_LANGUAGE = AMERICAN')INVOICE_DATE,
--CIP_DATE,
INVOICE_NUM,
TRANSFERRED_IN,
TRANSFERRED_OUT,
--ADDITION_DATE,
DESCRIPTION,
(NVL(TRANSFERRED_IN,0)-NVL(TRANSFERRED_OUT,0)) BALANCE,
INVOICE_AMOUNT COST,


CASE WHEN substr(CIP_DATE,5,2)=(select substr(:p_period_name,5,2) from dual) 
AND ADDITION_DATE IS NULL THEN TRANSFERRED_IN 
ELSE 0 END AS_ON_CURRENT_YEAR,
                                                                              
CASE WHEN substr(CIP_DATE,5,2) < (select substr(:p_period_name,5,2) from dual)
AND( substr(ADDITION_DATE ,5,2) >= (select substr(:p_period_name,5,2) from dual) OR
ADDITION_DATE IS NULL)
THEN TRANSFERRED_IN
END AS_ON_PREVIOUS_YEAR,

CASE WHEN CIP_DATE='Jan' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Jan' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END JAN_21,
 CASE WHEN CIP_DATE='Feb' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Feb' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END FEB_21,
 CASE WHEN CIP_DATE='Mar' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Mar' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END MAR_21,
 CASE WHEN CIP_DATE='Apr' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Apr' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END APR_21,
 CASE WHEN CIP_DATE='May' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='May' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END MAY_21,
 CASE WHEN CIP_DATE='Jun' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Jun' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END JUN_21,
 CASE WHEN CIP_DATE='Jul' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Jul' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END JUL_21,
 CASE WHEN CIP_DATE='Aug' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Aug' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END AUG_21,
 CASE WHEN CIP_DATE='Sep' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Sep' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END SEP_21,
 CASE WHEN CIP_DATE='Oct' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Oct' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END OCT_21,
 CASE WHEN CIP_DATE='Nov' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Nov' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END NOV_21,
 CASE WHEN CIP_DATE='Dec' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_IN 
 WHEN ADDITION_DATE='Dec' || (select substr(:p_period_name,4,3) from dual)
 then TRANSFERRED_OUT * -1
 END DEC_21
 
 
 
 
 
 

FROM
(SELECT 
DISTINCT FAB.ASSET_NUMBER,
--FDP.PERIOD_NAME,
(
SELECT DISTINCT AIA.INVOICE_NUM
From FA_ASSET_INVOICES FAI,
ap_invoices_all AIA,
ap_invoice_lines_all AILA
where 
FAI.asset_id=fab.asset_id
AND
AIA.INVOICE_ID=AILA.INVOICE_ID
AND
FAI.INVOICE_LINE_NUMBER=AILA.LINE_NUMBER
AND 
FAI.invoice_id=AIA.invoice_id
and AILA.amount<>0
--AND AIA.INVOICE_CURRENCY_CODE='SGD'
AND
ROWNUM=1
) INVOICE_NUM,
(
SELECT SUM(AILA.AMOUNT)
From FA_ASSET_INVOICES FAI,
ap_invoices_all AIA,
ap_invoice_lines_all AILA
where 
FAI.asset_id=fab.asset_id
AND
AIA.INVOICE_ID=AILA.INVOICE_ID
AND
FAI.INVOICE_LINE_NUMBER=AILA.LINE_NUMBER
AND 
FAI.invoice_id=AIA.invoice_id
and AILA.amount<>0
AND AIA.INVOICE_CURRENCY_CODE='SGD'
) INVOICE_AMOUNT,
(
SELECT DISTINCT AIA.INVOICE_DATE
From FA_ASSET_INVOICES FAI,
ap_invoices_all AIA,
ap_invoice_lines_all AILA
where 
FAI.asset_id=fab.asset_id
AND
AIA.INVOICE_ID=AILA.INVOICE_ID
AND
FAI.INVOICE_LINE_NUMBER=AILA.LINE_NUMBER
AND 
FAI.invoice_id=AIA.invoice_id
and AILA.amount<>0
--AND AIA.INVOICE_CURRENCY_CODE='SGD'
) INVOICE_DATE,

(SELECT 
FTV.PERIOD_NAME
FROM
FA_TRANSACTION_HEADERS TH,
FA_BOOKS B,
FA_TRANSACTIONS_V FTV
WHERE
TH.ASSET_ID=FAB.ASSET_ID
AND B.TRANSACTION_HEADER_ID_IN=TH.TRANSACTION_HEADER_ID
AND TH.asset_id = FTV.asset_id
And th.book_type_code = ftv.book_type_code
AND TH.TRANSACTION_HEADER_ID = FTV.TRANSACTION_HEADER_ID
AND TH.TRANSACTION_TYPE_CODE='CIP ADDITION' 
)CIP_DATE,

(SELECT 
FTV.PERIOD_NAME
FROM
FA_TRANSACTION_HEADERS TH,
FA_BOOKS B,
FA_TRANSACTIONS_V FTV
WHERE
TH.ASSET_ID=FAB.ASSET_ID
AND B.TRANSACTION_HEADER_ID_IN=TH.TRANSACTION_HEADER_ID
AND TH.asset_id = FTV.asset_id
And th.book_type_code = ftv.book_type_code
AND TH.TRANSACTION_HEADER_ID = FTV.TRANSACTION_HEADER_ID
AND TH.TRANSACTION_TYPE_CODE='ADDITION' 
AND ROWNUM=1
)ADDITION_DATE,

(SELECT 
B.COST
FROM
FA_TRANSACTION_HEADERS TH,
FA_BOOKS B
WHERE
TH.ASSET_ID=FAB.ASSET_ID
AND
B.TRANSACTION_HEADER_ID_IN=TH.TRANSACTION_HEADER_ID
AND 
TH.TRANSACTION_TYPE_CODE='CIP ADDITION' 
AND ROWNUM=1
)TRANSFERRED_IN,

(SELECT 
CASE WHEN H.TRANSACTION_TYPE_CODE = 'ADDITION' THEN A.COST END COST
FROM
FA_TRANSACTION_HEADERS H,
FA_BOOKS A
WHERE
H.ASSET_ID=FAB.ASSET_ID
AND
A.TRANSACTION_HEADER_ID_IN=H.TRANSACTION_HEADER_ID
AND 
H.TRANSACTION_TYPE_CODE IN ('ADDITION')
AND ROWNUM=1
)TRANSFERRED_OUT,
-- ADJ.ADJ_COST,
-- ret.cost_retired,
FATL.DESCRIPTION,
FB.COST
FROM
FA_ADDITIONS_B FAB,
FA_CATEGORIES_B FCB,
FA_ADDITIONS_TL FATL,
--FA_DEPRN_DETAIL FDD ,
--FA_DEPRN_PERIODS FDP,
--FA_TRANSACTION_HEADERS FTH,
FA_BOOKS FB


WHERE
FCB.CATEGORY_ID=FAB.ASSET_CATEGORY_ID
AND
FATL.ASSET_ID=FAB.ASSET_ID
AND 
FB.ASSET_ID=FAB.ASSET_ID
and 
FB.book_type_code=:P_books
AND EXISTS ( SELECT 1 FROM(SELECT 
DISTINCT FB_1.ASSET_ID
FROM
FA_ADDITIONS_B FAB_1,
FA_BOOKS FB_1,
FA_TRANSACTION_HEADERS FTH_1
WHERE
FTH_1.ASSET_ID=FAB_1.ASSET_ID
AND
FB_1.ASSET_ID=FAB_1.ASSET_ID
AND
FB_1.BOOK_TYPE_CODE=FTH_1.BOOK_TYPE_CODE
AND
FB_1.book_type_code=:P_books
AND
FTH_1.TRANSACTION_TYPE_CODE = 'CIP ADDITION'
AND
FAB_1.ASSET_ID=FAB.ASSET_ID))

AND NOT EXISTS ( SELECT 1 FROM(SELECT 
DISTINCT FB_1.ASSET_ID
FROM
FA_ADDITIONS_B FAB_1,
FA_BOOKS FB_1,
FA_TRANSACTION_HEADERS FTH_1,
FA_TRANSACTIONS_V FTRV
WHERE
FTH_1.ASSET_ID=FAB_1.ASSET_ID
AND
FB_1.ASSET_ID=FAB_1.ASSET_ID
AND
FTH_1.asset_id = FTRV.asset_id
And fth_1.book_type_code = ftrv.book_type_code
AND FTH_1.TRANSACTION_HEADER_ID = FTRV.TRANSACTION_HEADER_ID
AND FB_1.BOOK_TYPE_CODE=FTH_1.BOOK_TYPE_CODE
AND FB_1.book_type_code=:P_books
AND FTH_1.TRANSACTION_TYPE_CODE = 'ADDITION'
AND SUBSTR(FTRV.PERIOD_NAME,5,2) = TO_NUMBER(SUBSTR(:p_period_name,5,2))-1
AND FAB_1.ASSET_ID=FAB.ASSET_ID))

AND NOT EXISTS ( SELECT 1 FROM(SELECT 
DISTINCT FB_1.ASSET_ID
FROM
FA_ADDITIONS_B FAB_1,
FA_BOOKS FB_1,
FA_TRANSACTION_HEADERS FTH_1,
FA_TRANSACTIONS_V FTRV
WHERE
FTH_1.ASSET_ID=FAB_1.ASSET_ID
AND
FB_1.ASSET_ID=FAB_1.ASSET_ID
AND
FTH_1.asset_id = FTRV.asset_id
And fth_1.book_type_code = ftrv.book_type_code
AND FTH_1.TRANSACTION_HEADER_ID = FTRV.TRANSACTION_HEADER_ID
AND FB_1.BOOK_TYPE_CODE=FTH_1.BOOK_TYPE_CODE
AND FB_1.book_type_code=:P_books
AND FTH_1.TRANSACTION_TYPE_CODE = 'CIP ADDITION'
AND SUBSTR(FTRV.PERIOD_NAME,5,2) > TO_NUMBER(SUBSTR(:p_period_name,5,2))
AND FAB_1.ASSET_ID=FAB.ASSET_ID))


)MAIN
 --WHERE
--ASSET_NUMBER IN ('580','588','600','606','607','594')

 GROUP BY ASSET_NUMBER,DESCRIPTION,INVOICE_NUM,INVOICE_AMOUNT,TRANSFERRED_IN,
TRANSFERRED_OUT,INVOICE_DATE,CIP_DATE,ADDITION_DATE